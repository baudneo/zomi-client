[build-system]
requires = ["setuptools>=65.5.1", "wheel>=0.38.2"]
build-backend = "setuptools.build_meta"


[project]
name = "zomi-client"
version = "0.0.1a5"
dependencies = [
    # Client is default install

    'numpy>=1.21.4',
    'python-jose>=3.3.0',
    'pyyaml>=6.0',
    'cryptography==41.0.0',
    'psutil==5.9.4',
    'psutil-extra==0.2.0',
    "requests-toolbelt==0.10.0",
    "sqlalchemy==1.4.42",
    'pymysql==1.0.2',
    'shapely==1.8.5',
    "pydantic==2.0.3",
    "pydantic-settings==2.0.2",
    'dateparser==1.1.3',
    'paho-mqtt==1.6.1',
    'uvloop==0.16.0',
    'pygifsicle==1.0.7',
    'aiohttp==3.8.3',
    'python-dotenv==0.21.0',
]

authors = [
  { name="baudneo", email="zomi@baudneo.com" },
]
readme = "README.md"

requires-python = ">=3.8"
keywords = ["zoneminder", "object_detection", "machine_learning", "facial_recognition", "CUDA" ]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Graphics :: Capture",
    "Topic :: Multimedia :: Video :: Capture",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
]

[project.urls]
"Repository" = "https://github.com/baudneo/zm_ml"
"Bug Tracker" = "https://github.com/baudneo/zm_ml/issues"


[project.optional-dependencies]

client = [
    'numpy>=1.21.4',
    'python-jose>=3.3.0',
    'pyyaml>=6.0',
    'cryptography==41.0.0',
    'psutil==5.9.4',
    'psutil-extra==0.2.0',
    "requests-toolbelt==0.10.0",
    "sqlalchemy==1.4.42",
    'pymysql==1.0.2',
    'shapely==1.8.5',
    "pydantic==2.0.3",
    "pydantic-settings==2.0.2",
    'dateparser==1.1.3',
    'paho-mqtt==1.6.1',
    'uvloop==0.16.0',
    'pygifsicle==1.0.7',
    'aiohttp==3.8.3',
    'python-dotenv==0.21.0',
]

server = [
    'prometheus-client==0.17.1',
    "tinydb>=4.8.0",
    "torch>=2.0.1",
    "torchvision>=0.15.2",
    "onnxruntime-gpu>=1.15.1",
    'cryptography>=41.0.0',
    'webcolors>=1.13',
    'scikit-learn>=1.2.2',
    'PyYAML>=6.0',
    "pydantic~=2.0.3",
    "pydantic-settings~=2.0.2",
    'portalocker>=2.6.0',
    'uvloop>=0.16.0',
    'uvicorn>=0.19.0',
    'fastapi>=0.86.0',
    'passlib>=1.7.4',
    'Pillow>=9.3.0',
    'python-jose>=3.3.0',
    'python-multipart>=0.0.5',
    'python-dotenv>=0.21.0'
]

# To export yolov8 and yolo-nas models to onnx
onnx_export = [
    "ultralytics>=8.0.1.173",
    "super_gradients>=3.1.3",
]

# install latest trt and pycuda
trt = [
    "tensorrt",
    "pycuda",
]

# install latest pycuda
pycuda = [
    "pycuda",
]


[tool.setuptools.packages.find]
## All the following settings are optional:
where = ["src"]  # ["."] by default
#include = ["mypackage*"]  # ["*"] by default
exclude = ["tests*", "examples*", "data*", "configs*"]  # empty by default
##namespaces = false  # true by default

